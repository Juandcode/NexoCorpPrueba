// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251028073242_ConfigureCategorias2")]
    partial class ConfigureCategorias2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Categorias", b =>
                {
                    b.Property<Guid>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdCategoriaPadre")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdCategoriaPadre");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Domain.ExpProductos", b =>
                {
                    b.Property<Guid>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Domain.ProductosCategorias", b =>
                {
                    b.Property<Guid>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdCategoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdProducto")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdCategoria")
                        .IsUnique()
                        .HasFilter("[IdCategoria] IS NOT NULL");

                    b.HasIndex("IdProducto")
                        .IsUnique()
                        .HasFilter("[IdProducto] IS NOT NULL");

                    b.ToTable("ProductosCategorias");
                });

            modelBuilder.Entity("Domain.Categorias", b =>
                {
                    b.HasOne("Domain.Categorias", "CategoriaPadre")
                        .WithMany()
                        .HasForeignKey("IdCategoriaPadre")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CategoriaPadre");
                });

            modelBuilder.Entity("Domain.ProductosCategorias", b =>
                {
                    b.HasOne("Domain.Categorias", "Categorias")
                        .WithOne("ProductosCategoria")
                        .HasForeignKey("Domain.ProductosCategorias", "IdCategoria");

                    b.HasOne("Domain.ExpProductos", "ExpProductos")
                        .WithOne("ProductosCategoria")
                        .HasForeignKey("Domain.ProductosCategorias", "IdProducto");

                    b.Navigation("Categorias");

                    b.Navigation("ExpProductos");
                });

            modelBuilder.Entity("Domain.Categorias", b =>
                {
                    b.Navigation("ProductosCategoria")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ExpProductos", b =>
                {
                    b.Navigation("ProductosCategoria")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
